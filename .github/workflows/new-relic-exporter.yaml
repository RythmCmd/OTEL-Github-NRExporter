name: Change Tracking Marker
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  newrelic:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Resolve New Relic Entity GUID by Tag
        id: resolve
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
          REPO:                ${{ github.repository }}
        run: |
          PAYLOAD="{\"query\":\"{ actor { entitySearch(queryBuilder:{tags:{value:\\\"${REPO}\\\",key:\\\"repo\\\"}}){results{entities{guid}}}}}\"}"
          GUID=$(curl -s -X POST https://api.eu.newrelic.com/graphql \
            -H "Content-Type: application/json" \
            -H "API-Key: $NEW_RELIC_API_KEY" \
            -d "$PAYLOAD" \
          | jq -r '.data.actor.entitySearch.results.entities[0].guid')
          echo "ENTITY_GUID=$GUID" >> $GITHUB_ENV

      - name: Set Release Version
        run: echo "RELEASE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Send Change Tracking Event
        if: always()    # run even on failure/cancel
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
          ENTITY_GUID:       ${{ env.ENTITY_GUID }}
          RELEASE_VERSION:   ${{ env.RELEASE_VERSION }}
          JOB_STATUS:        ${{ job.status }}
          GITHUB_REPO:       ${{ github.repository }}
          GITHUB_SHA:        ${{ github.sha }}
          GITHUB_ACTOR:      ${{ github.actor }}
        run: |
          # Build the GraphQL mutation payload
          read -r -d '' PAYLOAD <<EOF
{"query":"mutation { changeTrackingCreateEvent(changeTrackingEvent:{categoryAndTypeData:{categoryFields:{deployment:{version:\\\"$RELEASE_VERSION\\\"}}kind:{category:\\\"Deployment\\\",type:\\\"Rolling\\\"}}entitySearch:{query:\\\"id = '$ENTITY_GUID'\\\"}description:\\\"Automated Release via GitHub Actions â€” status: $JOB_STATUS\\\"user:\\\"$GITHUB_ACTOR\\\"commit:\\\"$GITHUB_SHA\\\"changelog:\\\"https://github.com/$GITHUB_REPO/blob/master/CHANGELOG.md\\\"groupId:\\\"Release: $RELEASE_VERSION\\\"})}"}EOF

          # Send the mutation to NerdGraph
          curl -s -X POST https://api.eu.newrelic.com/graphql \
            -H "Content-Type: application/json" \
            -H "API-Key: $NEW_RELIC_API_KEY" \
            -d "$PAYLOAD"
